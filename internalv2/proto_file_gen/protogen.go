package proto_file_gen

import (
	"fmt"
	"github.com/samber/lo"
	"github.com/yaoguangduan/protosync/internalv2/gen"
	"path/filepath"
)

func GenerateProto(sdf gen.SyncDef) {
	for _, msg := range sdf.Messages {
		generateProtoMessage(msg, sdf)
	}
}

// proto type str
func ProtoIdentify(sfd gen.SyncFieldDef) string {
	if gen.IsBuildInType(sfd.Kind) {
		return sfd.Kind
	}
	if sfd.IsList() {
		return sfd.ListType
	}
	return (*sfd.MsgOrEnumRef).Name
}

func generateProtoMessage(msg gen.SyncMsgOrEnumDef, sdf gen.SyncDef) {
	fw := gen.NewFileWriter()
	fw.PL("syntax = \"proto3\";")
	fw.PL()
	fw.PL("//this file is generated by gsync, do not modify it manually !!!")
	fw.PL(fmt.Sprintf("option go_package = \"%s\";", filepath.ToSlash(lo.Must(filepath.Rel(sdf.Defs["proto_out"], sdf.Defs["go_out"])))))
	fw.PL()
	if msg.IsEnum {
		fw.PL("enum ", msg.Name, "{ //", msg.Anno)
		for _, v := range msg.EnumValues {
			fw.PL(fmt.Sprintf("  %s = %d; // %s", v.Value, v.Number, v.Anno))
		}
		fw.PL("}")
	} else {
		deps := make(map[string]struct{})
		for _, field := range msg.MsgFields {
			if field.MsgOrEnumRef != nil {
				deps[field.MsgOrEnumRef.Name] = struct{}{}
			}
		}

		for dep := range deps {
			fw.PL(fmt.Sprintf("import \"%s\";", protoFileName(dep)))
		}
		fw.PL()

		fw.PL("message ", msg.Name, "{", msg.Anno)
		for _, field := range msg.MsgFields {
			if field.IsMap() || field.IsList() {
				fw.PL(fmt.Sprintf("  repeated %s %s = %d;", ProtoIdentify(field), field.Name, field.Number))
				if field.IsMap() {
					fw.PL(fmt.Sprintf("  repeated %s %s = %d;", field.MapKeyKind, ProtoDeletedName(field.Name), field.ProtoDelNumber()))
				} else {
					fw.PL(fmt.Sprintf("  bool %s = %d;", ProtoClearedName(field.Name), field.ProtoClearNumber()))
				}
			} else {
				fw.PL(fmt.Sprintf("  optional %s %s = %d;", ProtoIdentify(field), field.Name, field.Number))
			}
		}
		fw.PL("}")
	}
	fw.Save(filepath.Join(sdf.Defs["proto_out"], protoFileName(msg.Name)))
}

func protoFileName(msg string) string {
	return fmt.Sprintf("%s.proto", msg)
}
func ProtoClearedName(n string) string {
	return n + "Cleared"
}
func ProtoDeletedName(n string) string {
	return n + "Deleted"
}
